"""Waldiez method classes and constants."""

# pylint: disable=line-too-long

from enum import Enum
from typing import Dict, List

from .agents import (
    CUSTOM_AFTER_WORK,
    CUSTOM_AFTER_WORK_ARGS,
    CUSTOM_AFTER_WORK_HINTS,
    CUSTOM_EMBEDDING_FUNCTION,
    CUSTOM_EMBEDDING_FUNCTION_ARGS,
    CUSTOM_EMBEDDING_FUNCTION_HINTS,
    CUSTOM_ON_CONDITION_AVAILABLE,
    CUSTOM_ON_CONDITION_AVAILABLE_ARGS,
    CUSTOM_ON_CONDITION_AVAILABLE_HINTS,
    CUSTOM_SPEAKER_SELECTION,
    CUSTOM_SPEAKER_SELECTION_ARGS,
    CUSTOM_SPEAKER_SELECTION_HINTS,
    CUSTOM_TEXT_SPLIT_FUNCTION,
    CUSTOM_TEXT_SPLIT_FUNCTION_ARGS,
    CUSTOM_TEXT_SPLIT_FUNCTION_HINTS,
    CUSTOM_TOKEN_COUNT_FUNCTION,
    CUSTOM_TOKEN_COUNT_FUNCTION_ARGS,
    CUSTOM_TOKEN_COUNT_FUNCTION_HINTS,
    CUSTOM_UPDATE_SYSTEM_MESSAGE,
    CUSTOM_UPDATE_SYSTEM_MESSAGE_ARGS,
    CUSTOM_UPDATE_SYSTEM_MESSAGE_HINTS,
    IS_TERMINATION_MESSAGE,
    IS_TERMINATION_MESSAGE_ARGS,
    IS_TERMINATION_MESSAGE_HINTS,
)
from .chat import (
    CALLABLE_MESSAGE,
    CALLABLE_MESSAGE_ARGS,
    CALLABLE_MESSAGE_HINTS,
    NESTED_CHAT_ARGS,
    NESTED_CHAT_HINTS,
    NESTED_CHAT_MESSAGE,
    NESTED_CHAT_REPLY,
)


class WaldiezMethodName(str, Enum):
    """Waldiez method names."""

    CALLABLE_MESSAGE = CALLABLE_MESSAGE
    CUSTOM_AFTER_WORK = CUSTOM_AFTER_WORK
    CUSTOM_EMBEDDING_FUNCTION = CUSTOM_EMBEDDING_FUNCTION
    CUSTOM_ON_CONDITION_AVAILABLE = CUSTOM_ON_CONDITION_AVAILABLE
    CUSTOM_SPEAKER_SELECTION = CUSTOM_SPEAKER_SELECTION
    CUSTOM_TEXT_SPLIT_FUNCTION = CUSTOM_TEXT_SPLIT_FUNCTION
    CUSTOM_TOKEN_COUNT_FUNCTION = CUSTOM_TOKEN_COUNT_FUNCTION
    CUSTOM_UPDATE_SYSTEM_MESSAGE = CUSTOM_UPDATE_SYSTEM_MESSAGE
    IS_TERMINATION_MESSAGE = IS_TERMINATION_MESSAGE
    NESTED_CHAT_MESSAGE = NESTED_CHAT_MESSAGE
    NESTED_CHAT_REPLY = NESTED_CHAT_REPLY


WaldiezMethodArgs: Dict[WaldiezMethodName, List[str]] = {
    WaldiezMethodName.CALLABLE_MESSAGE: CALLABLE_MESSAGE_ARGS,
    WaldiezMethodName.CUSTOM_AFTER_WORK: CUSTOM_AFTER_WORK_ARGS,
    WaldiezMethodName.CUSTOM_EMBEDDING_FUNCTION: CUSTOM_EMBEDDING_FUNCTION_ARGS,  # noqa: E501
    WaldiezMethodName.CUSTOM_ON_CONDITION_AVAILABLE: CUSTOM_ON_CONDITION_AVAILABLE_ARGS,  # noqa: E501
    WaldiezMethodName.CUSTOM_SPEAKER_SELECTION: CUSTOM_SPEAKER_SELECTION_ARGS,
    WaldiezMethodName.CUSTOM_TEXT_SPLIT_FUNCTION: CUSTOM_TEXT_SPLIT_FUNCTION_ARGS,  # noqa: E501
    WaldiezMethodName.CUSTOM_TOKEN_COUNT_FUNCTION: CUSTOM_TOKEN_COUNT_FUNCTION_ARGS,  # noqa: E501
    WaldiezMethodName.CUSTOM_UPDATE_SYSTEM_MESSAGE: CUSTOM_UPDATE_SYSTEM_MESSAGE_ARGS,  # noqa: E501
    WaldiezMethodName.IS_TERMINATION_MESSAGE: IS_TERMINATION_MESSAGE_ARGS,
    WaldiezMethodName.NESTED_CHAT_MESSAGE: NESTED_CHAT_ARGS,
    WaldiezMethodName.NESTED_CHAT_REPLY: NESTED_CHAT_ARGS,
}

WaldiezMethodHints: Dict[WaldiezMethodName, str] = {
    WaldiezMethodName.CALLABLE_MESSAGE: CALLABLE_MESSAGE_HINTS,
    WaldiezMethodName.CUSTOM_AFTER_WORK: CUSTOM_AFTER_WORK_HINTS,
    WaldiezMethodName.CUSTOM_EMBEDDING_FUNCTION: CUSTOM_EMBEDDING_FUNCTION_HINTS,  # noqa: E501
    WaldiezMethodName.CUSTOM_ON_CONDITION_AVAILABLE: CUSTOM_ON_CONDITION_AVAILABLE_HINTS,  # noqa: E501
    WaldiezMethodName.CUSTOM_SPEAKER_SELECTION: CUSTOM_SPEAKER_SELECTION_HINTS,
    WaldiezMethodName.CUSTOM_TEXT_SPLIT_FUNCTION: CUSTOM_TEXT_SPLIT_FUNCTION_HINTS,  # noqa: E501
    WaldiezMethodName.CUSTOM_TOKEN_COUNT_FUNCTION: CUSTOM_TOKEN_COUNT_FUNCTION_HINTS,  # noqa: E501
    WaldiezMethodName.CUSTOM_UPDATE_SYSTEM_MESSAGE: CUSTOM_UPDATE_SYSTEM_MESSAGE_HINTS,  # noqa: E501
    WaldiezMethodName.IS_TERMINATION_MESSAGE: IS_TERMINATION_MESSAGE_HINTS,
    WaldiezMethodName.NESTED_CHAT_MESSAGE: NESTED_CHAT_HINTS,
    WaldiezMethodName.NESTED_CHAT_REPLY: NESTED_CHAT_HINTS,
}
